<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="License.Code.LicenseDetailsSheet" locale="">
  <web>License.Code</web>
  <name>LicenseDetailsSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>License.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="License.Code.LicenseDetailsMacros"/}}

{{velocity output="false"}}
#macro (editLicenseDetails)
  (% class="xform" %)(((
    ## The license id is generated.
    $doc.display('licenseId', 'hidden')
    #if ($doc.isNew())
      ## The list of dependencies that are covered by the license is generated automatically when left empty. For new
      ## license details documents this field is supposed to be empty initially, unless a template is specified in the
      ## URL (e.g. when a license is extended or re-generated), in which case we want to discard the value coming from
      ## the template (in order to force the list to be generated automatically).
      {{html clean="false"}}
      &lt;input type="hidden" name="License.Code.LicenseDetailsClass_0_dependentFeatureIds" value="" /&gt;
      {{/html}}
    #end
    ## Display the fields that are editable.
    #foreach ($propertyName in ['type', 'firstName', 'lastName', 'email', 'instanceId', 'featureId', 'support',
        'maxUserCount', 'sendEmails'])
      ; $doc.displayPrettyName($propertyName)
      : $doc.display($propertyName)
    #end
    #if($request.template)
      #if($request.getParameter("License.Code.LicenseDetailsClass_0_issueDate"))
      ; $doc.displayPrettyName("issueDate")
      : $doc.display("issueDate")
      #end
      #if($request.getParameter("License.Code.LicenseDetailsClass_0_expirationDate"))
      ; $doc.displayPrettyName("expirationDate")
      : $doc.display("expirationDate")
      #end
      $doc.display("hasLicense", "hidden")
    #end
  )))
#end

#macro (viewLicenseDetails)
  (% class="xform" %)(((
    #foreach ($propertyName in ['type', 'firstName', 'lastName', 'email', 'instanceId', 'featureId',
        'dependentFeatureIds', 'support', 'maxUserCount', 'issueDate', 'expirationDate', 'sendEmails'])
      #set ($value = $doc.getValue($propertyName))
      #if ("$!value.size()" == '')
        #set ($value = [$value])
      #end
      #if ("$!stringtool.join($value, '')" != '')
        ; $doc.displayPrettyName($propertyName)
        : $doc.display($propertyName)
      #end
    #end
    #set ($hasLicense = $doc.getValue('hasLicense'))
    #if ("$!hasLicense" == '1')
      #set ($licenseId = $doc.getValue('licenseId'))
      #set ($licenseStore = $services.licensing.license.getFileLicenseStore('generated-licenses'))
      #set ($retrieveGeneratedLicenseError = $NULL)
      #try ('retrieveGeneratedLicenseError')
        #set ($license = $services.licensing.manager.retrieveGeneratedLicense($licenseStore, $licenseId))
      #end
      ; License
      #if ($retrieveGeneratedLicenseError)
        : {{error}}$retrieveGeneratedLicenseError.getCause(){{/error}}
      #elseif ("$!license" != '')
        : {{html clean="false"}}
          &lt;p&gt;
            $services.icon.renderHTML('download')
            &lt;a href="$doc.getURL('get', 'outputSyntax=plain&amp;action=download')"&gt;Download license file&lt;/a&gt;
          &lt;/p&gt;
          &lt;pre class="code"&gt;$escapetool.xml($services.licensing.license.encode($license))&lt;/pre&gt;
          {{/html}}
      #else
        : {{error}}The license ID [$licenseId] doesn't correspond to any saved license in the license store! You should consider regenerating a license{{/error}}

        #displayGenerateButton()
      #end

      #if ("$!hasLicense" == '1')
        #displayExtendButton()
      #end
    #else

      ## No license ID, we consider that no license has been generated yet. Propose to generate one.
      #displayGenerateButton()
    #end
  )))
#end

#macro (displayGenerateButton)
  {{html clean="false"}}
  &lt;form&gt;
    &lt;button name="action" value="generate" class="btn btn-primary"&gt;Generate License&lt;/button&gt;
  &lt;/form&gt;
  {{/html}}
#end

#macro (displayExtendButton)
  {{html clean="false"}}
  &lt;form action="$xwiki.getURL("License.Code.Extend")" method="GET"&gt;
    &lt;input name="page" type="hidden" value="${escapetool.xml($doc.fullName)}" /&gt;
    &lt;button name="action" value="generate" class="btn btn-primary"&gt;Copy and Extend License&lt;/button&gt;
  &lt;/form&gt;
  {{/html}}
#end

#macro (downloadLicense)
  #set ($licenseId = $doc.getValue('licenseId'))
  #set ($licenseStore = $services.licensing.license.getFileLicenseStore('generated-licenses'))
  #set ($license = $services.licensing.manager.retrieveGeneratedLicense($licenseStore, $licenseId))
  #set ($bytes = $license.getEncoded())
  ## We write the output directly to the HTTP response in order to avoid going through the Rendering which executes
  ## transformations that could break the license (e.g. the icon transformation).
  #set ($discard = $response.setContentType('application/octet-stream'))
  #set ($discard = $response.setContentLength($bytes.size()))
  #set ($discard = $response.setHeader('Content-disposition', "attachment; filename=${licenseId}.license"))
  #foreach ($byte in $bytes)
    #set ($discard = $response.outputStream.write($byte))
  #end
  ## Make sure the entire content is send back to the client.
  #set ($discard = $response.flushBuffer())
  ## Make sure XWiki doesn't write any more content to the response.
  #set ($discard = $xcontext.setFinished(true))
#end
{{/velocity}}

{{velocity}}
#if ($request.action == 'generate')
  #readLicenseDetailsFromDocument($doc)
  #setExtraLicenseDetails($licenseDetails)
  #generateLicense($licenseDetails true $doc.documentReference)
  ## Refresh the page.
  $response.sendRedirect($xwiki.getURL($doc.documentReference, 'view'))
#elseif ($request.action == 'download')
  #downloadLicense()
#elseif ($xcontext.action == 'edit')
  #editLicenseDetails()
#else
  #viewLicenseDetails()
#end
{{/velocity}}</content>
</xwikidoc>
